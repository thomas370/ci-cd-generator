name: Java CI/CD

on:
  push:
    branches:
      - main
      - dev
  pull_request:
    branches:
      - main
      - dev

jobs:
  build:
    name: Build & Test
    runs-on: ubuntu-latest

    strategy:
      matrix:
        java-version: [8, 11, 17, 21]  # Test sur plusieurs versions de Java

    steps:
      - name: 🛠 Checkout Repository
        uses: actions/checkout@v3

      - name: ☕ Set up Java JDK ${{ matrix.java-version }}
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: ${{ matrix.java-version }}

      - name: 📦 Cache Maven dependencies
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: maven-${{ runner.os }}-${{ hashFiles('**/pom.xml') }}
          restore-keys: maven-${{ runner.os }}

      - name: 🔄 Install dependencies & Build
        run: mvn clean install

      - name: ✅ Run Tests
        run: mvn test

      - name: 📊 Code Quality Check (Checkstyle)
        run: mvn checkstyle:check

      - name: 🏗️ Package Application
        run: mvn package -DskipTests

      - name: 📦 Upload JAR Artifact
        uses: actions/upload-artifact@v3
        with:
          name: myapp-jar
          path: target/*.jar

  deploy:
    name: Deploy to Production
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main'

    steps:
      - name: 🛠 Checkout Repository
        uses: actions/checkout@v3

      - name: 📥 Download JAR Artifact
        uses: actions/download-artifact@v3
        with:
          name: myapp-jar
          path: .

      - name: 🚀 Deploy Application
        run: |
          scp myapp-*.jar user@server:/path/to/deploy
          ssh user@server "systemctl restart my-java-app"
